const $examples = document.querySelectorAll("#examples li");
const $imageHref = document.querySelector("#image-href");
const $addButton = document.querySelector("#add-button");
const $imageContainer = document.querySelector("#image-container");

$addButton.addEventListener("click", () => {
  const url = new URL($imageHref.value);
  // üöß TODO üöß
  console.debug(`Ajouter l'image ${url} √†`, $imageContainer);
});
// comprehension

$imageHref.addEventListener("input", () => {
  $addButton.disabled = !$imageHref.checkValidity() || $imageHref.value === "";
});

for (const $example of $examples)
  $example.addEventListener("click", () => {
    $imageHref.value = $example.textContent.trim();
    $imageHref.dispatchEvent(new Event("input"));
  });
//On ajoute une image dans la page gr√¢ce au bouton d‚Äôajout en lisant l‚ÄôURL saisie (le projet de d√©part rempli automatiquement le champ quand on clique sur une des adresses d‚Äôexemple)?.
//#######################################################################################################
// -----------All test Adam Aysoy 

let inputElement = document.getElementById('inputImageURL');

//bouton pour ajouter l'image
let addButton = document.getElementById('addImageButton');

// Quand on clique sur le bouton, on cr√©e une nouvelle image et on l'ajoute √† la page
addButton.addEventListener('click', function() {
    let imageUrl = inputElement.value;
    let newImage = document.createElement('img');
    newImage.src = imageUrl;
    document.body.appendChild(newImage);
});
//#######################################################################################################
// Exercice 1 
//1. $imageHref.dispatchEvent(new Event(‚Äúinput‚Äù)) : Cette ligne de code d√©clenche manuellement un √©v√©nement input sur l‚Äô√©l√©ment $imageHref. L‚Äôint√©r√™t de cette ligne est de d√©clencher tous les √©couteurs d‚Äô√©v√©nements input attach√©s √† l‚Äô√©l√©ment $imageHref, comme si l‚Äôutilisateur avait r√©ellement tap√© dans le champ de saisie. Dans votre code, cela a pour effet de mettre √† jour l‚Äô√©tat d√©sactiv√© du bouton d‚Äôajout chaque fois qu‚Äôun exemple d‚Äôimage est cliqu√©.
// 2. !$imageHref.checkValidity() || $imageHref.value === ‚Äú‚Äù : Cette ligne de code v√©rifie deux conditions :
// ** $imageHref.checkValidity() retourne false si la valeur de l‚Äô√©l√©ment $imageHref ne respecte pas les crit√®res de validation (par exemple, si ce n‚Äôest pas une URL valide, car l‚Äô√©l√©ment est de type url).
//$imageHref.value === ‚Äú‚Äù v√©rifie si le champ de saisie est vide.
//L‚Äôop√©rateur ! inverse la valeur de v√©rit√© de checkValidity(), donc !$imageHref.checkValidity() est true si la valeur de l‚Äô√©l√©ment $imageHref est invalide. L‚Äôop√©rateur || signifie ‚Äúou‚Äù, donc toute la condition est true si l‚Äôune ou l‚Äôautre de ces conditions est true. En d‚Äôautres termes, le bouton d‚Äôajout est d√©sactiv√© si l‚ÄôURL n‚Äôest pas valide ou si le champ de saisie est vide. Cela emp√™che l‚Äôutilisateur d‚Äôajouter une image si l‚ÄôURL n‚Äôest pas valide ou si aucune URL n‚Äôa √©t√© entr√©e.


// Lorsqu'une image est ajout√©e...
$addButton.addEventListener("click", () => {
  const url = new URL($imageHref.value);
  const newImage = document.createElement('img');
  newImage.src = url;

  // Cr√©ez les boutons pour supprimer et d√©placer l'image
  const deleteButton = document.createElement('button');
  deleteButton.textContent = '‚úñ';
  const moveUpButton = document.createElement('button');
  moveUpButton.textContent = '‚ñ≤';
  const moveDownButton = document.createElement('button');
  moveDownButton.textContent = '‚ñº';

  // Ajoutez les √©couteurs d'√©v√©nements aux boutons
  deleteButton.addEventListener('click', () => {
    $imageContainer.removeChild(newImage);
  });
  moveUpButton.addEventListener('click', () => {
    // TODO: d√©placer l'image vers le haut
  });
  moveDownButton.addEventListener('click', () => {
    // TODO: d√©placer l'image vers le bas
  });

  // Ajoutez les boutons √† l'image
  newImage.appendChild(deleteButton);
  newImage.appendChild(moveUpButton);
  newImage.appendChild(moveDownButton);

  // Ajoutez l'image au conteneur d'images
  $imageContainer.appendChild(newImage);
});


//Cela cr√©e trois boutons pour chaque image : un pour la supprimer, un pour la d√©placer vers le haut et un pour la d√©placer vers le bas. Vous devrez remplir les sections TODO avec le code pour d√©placer les images.

//Pour d√©sactiver les boutons ‚ñ≤ et ‚ñº lorsque l‚Äôimage est respectivement en haut ou en bas de la liste, vous pouvez v√©rifier la position de l‚Äôimage dans le conteneur d‚Äôimages chaque fois qu‚Äôune image est ajout√©e, supprim√©e ou d√©plac√©e, et mettre √† jour l‚Äô√©tat d√©sactiv√© des boutons en cons√©quence.